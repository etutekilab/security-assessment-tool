name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug Secrets Presence
        run: |
          echo "Checking secrets presence..."
          echo "SUPABASE_URL exists: ${{ secrets.SUPABASE_URL != '' }}"
          echo "SUPABASE_ANON_KEY exists: ${{ secrets.SUPABASE_ANON_KEY != '' }}"
          echo "OPENAI_API_KEY exists: ${{ secrets.OPENAI_API_KEY != '' }}"

      - name: Create and verify env file
        run: |
          # Create env.js
          echo "Creating env.js..."
          echo "window.env = {" > env.js
          echo "  OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'," >> env.js
          echo "  SUPABASE_URL: '${{ secrets.SUPABASE_URL }}'," >> env.js
          echo "  SUPABASE_ANON_KEY: '${{ secrets.SUPABASE_ANON_KEY }}'," >> env.js
          echo "  ENVIRONMENT: 'production'" >> env.js
          echo "};" >> env.js

          # Verify file exists and has content
          echo "Verifying env.js..."
          if [ ! -f env.js ]; then
            echo "env.js not created!"
            exit 1
          fi
          
          # Check file size
          echo "env.js size: $(wc -c < env.js) bytes"
          
          # Verify structure (sanitized)
          echo "env.js structure:"
          cat env.js | sed 's/: ".*"/: "[REDACTED]"/'

      - name: Debug env.js content
        run: |
          echo "Checking env.js content (sanitized)..."
          echo "SUPABASE_URL length: ${#SUPABASE_URL}"
          echo "SUPABASE_ANON_KEY length: ${#SUPABASE_ANON_KEY}"
          echo "OPENAI_API_KEY length: ${#OPENAI_API_KEY}"
          cat env.js | sed 's/\(.*key.*\): .*/\1: [REDACTED]/'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Verify Secrets
        run: |
          echo "Checking secrets format..."
          if [[ ! "${{ secrets.SUPABASE_URL }}" =~ ^https:// ]]; then
            echo "Error: SUPABASE_URL should start with https://"
            exit 1
          fi
          if [[ ! "${{ secrets.SUPABASE_ANON_KEY }}" =~ ^eyJ ]]; then
            echo "Error: SUPABASE_ANON_KEY has incorrect format"
            exit 1
          fi
          if [[ ! "${{ secrets.OPENAI_API_KEY }}" =~ ^sk- ]]; then
            echo "Error: OPENAI_API_KEY has incorrect format"
            exit 1
          fi
          echo "All secrets have correct format"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          force_orphan: true 